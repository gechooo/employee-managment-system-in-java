/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newpackage;

import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import static java.awt.Toolkit.getDefaultToolkit;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/**
 *
 * @author Chetan G
 */
public class updatemasterinfo extends javax.swing.JFrame {

    /**
     * Creates new form updatemasterinfo
     */
    
    static String name = null;
    static String state = null;
    static String city = null;
    static String dateofjoining = null;
    static String salary = null;
    static String department = null;
    static String contactnumber = null;
    static int imageflag =0;
    static String filepath=null;
    
    public updatemasterinfo() {
        initComponents();
   /*     Toolkit kt = Toolkit.getDefaultToolkit();
        
        int width = (int) kt.getScreenSize().getWidth();
        int height = (int) kt.getScreenSize().getHeight();
        
        this.setSize(width,height);
    */
        this.setBounds(250,150,1250,620);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        idtf = new javax.swing.JTextField();
        nametf = new javax.swing.JTextField();
        statetf = new javax.swing.JTextField();
        citytf = new javax.swing.JTextField();
        dateofjoiningtf = new javax.swing.JTextField();
        salarytf = new javax.swing.JTextField();
        departmenttf = new javax.swing.JTextField();
        contactnumbertf = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();
        savebtn = new javax.swing.JButton();
        resetbtn = new javax.swing.JButton();
        idproofbtn = new javax.swing.JButton();
        homebtn = new javax.swing.JButton();
        idprooflable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setText("        Update Employee's Record");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        id.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        id.setText("Enter Maaster's Id :");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel2.setText("Name :");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel3.setText("State :");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel4.setText("City : ");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel5.setText("Date Of Joning :");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel6.setText("Salary : ");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel7.setText("Department : ");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel8.setText("Contact Number : ");

        idtf.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        nametf.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        statetf.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        citytf.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        dateofjoiningtf.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        salarytf.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        departmenttf.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        contactnumbertf.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        searchbtn.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        searchbtn.setText("Search");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        savebtn.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        savebtn.setText("Save Changes");
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });

        resetbtn.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        resetbtn.setText("Reset");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });

        idproofbtn.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        idproofbtn.setText("Change Id Proof");
        idproofbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idproofbtnActionPerformed(evt);
            }
        });

        homebtn.setBackground(new java.awt.Color(255, 255, 255));
        homebtn.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        homebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newpackage/home icon - Copy.png"))); // NOI18N
        homebtn.setText("Go To Home");
        homebtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        homebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homebtnActionPerformed(evt);
            }
        });

        idprooflable.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        idprooflable.setText("                 Id Proof Will Appear Here");
        idprooflable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(homebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(238, 238, 238)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(departmenttf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                                    .addComponent(salarytf, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateofjoiningtf, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(citytf, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(statetf, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nametf, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idtf, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(contactnumbertf))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(idprooflable, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(resetbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(savebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(693, 693, 693)
                        .addComponent(idproofbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(666, 666, 666))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(homebtn)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idtf)
                    .addComponent(searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(savebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nametf))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(statetf))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(citytf))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateofjoiningtf))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(salarytf))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(departmenttf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactnumbertf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(442, 442, 442))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(idprooflable, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idproofbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        // TODO add your handling code here:
          
        int count=0;
        
        try
        {
            
            Class.forName("com.mysql.jdbc.Driver");
            
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/fms","root","");
            
            Statement stmt = con.createStatement();
            
            ResultSet rs =stmt.executeQuery("select name,state,city,dateofjoining,salary,department,contactnumber,image from masterinfo where id = "+idtf.getText());
            
            
            
            while(rs.next())
            {
                count++;
                
                name= rs.getString("name");
                state= rs.getString("state");
                city= rs.getString("city");
                dateofjoining = rs.getString("dateofjoining");
                salary= rs.getString("salary");
                department= rs.getString("department");
                contactnumber=rs.getString("contactnumber");
                
                nametf.setText(rs.getString("name"));
                statetf.setText(rs.getString("state"));
                citytf.setText(rs.getString("city"));
                dateofjoiningtf.setText(rs.getString("dateofjoining"));
                salarytf.setText(rs.getString("salary"));
                departmenttf.setText(rs.getString("department"));
                contactnumbertf.setText(rs.getString("contactnumber"));
            }
            
            byte[] imagebytes;
            Image myimage;
            
            PreparedStatement ps;
            ps = con.prepareStatement("select image from masterinfo where id = ?");
            
            int id = Integer.parseInt(idtf.getText());
            
            ps.setInt(1, id);
            
            ResultSet rs2 = ps.executeQuery();
            
            while(rs2.next())
            {
                imagebytes = rs2.getBytes("image");
                myimage = getDefaultToolkit().createImage(imagebytes);
                ImageIcon icon2 = new ImageIcon(new ImageIcon(myimage).getImage().getScaledInstance(idprooflable.getWidth(), idprooflable.getHeight(),Image.SCALE_DEFAULT));
                idprooflable.setText("");
                idprooflable.setIcon(icon2);
            }
            
           con.close();
          
           
           if(count==0)
           {
               JOptionPane.showMessageDialog(this,"!! Record not Found !!");
           }
        }
        
        catch(Exception e)
        {
            
        } 
        
    }//GEN-LAST:event_searchbtnActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
        // TODO add your handling code here:
   
        if(!name.equalsIgnoreCase(nametf.getText()))
        {
           try
           {
               Class.forName("com.mysql.jdbc.Driver");
            
               Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/fms","root","");
               
               PreparedStatement st = con.prepareStatement("update masterinfo set name = ? where name =?");
            
               st.setString(1,nametf.getText());
               st.setString(2,name);
            
               int i = st.executeUpdate();
            
                if(i==0)
                {
                    JOptionPane.showMessageDialog(this,"!! Name update Failed !!");
                    con.close();
                }

                else
                {
                    JOptionPane.showMessageDialog(this,"Name is updated succesfully");
                    con.close();
                }
               
           }
           
           catch(Exception e)
           {
               
           }
        }
        
        if(!state.equalsIgnoreCase(statetf.getText()))
        {
           try
           {
               Class.forName("com.mysql.jdbc.Driver");
            
               Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/fms","root","");
               
               PreparedStatement st = con.prepareStatement("update masterinfo set state = ? where state =?");
            
               st.setString(1,statetf.getText());
               st.setString(2,state);
            
               int i = st.executeUpdate();
            
                if(i==0)
                {
                    JOptionPane.showMessageDialog(this,"!! State update Failed !!");
                    con.close();
                }

                else
                {
                    JOptionPane.showMessageDialog(this,"State is updated succesfully");
                    con.close();
                }
               
           }
           
           catch(Exception e)
           {
               
           }
        }
        
        if(!city.equalsIgnoreCase(citytf.getText()))
        {
           try
           {
               Class.forName("com.mysql.jdbc.Driver");
            
               Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/fms","root","");
               
               PreparedStatement st = con.prepareStatement("update masterinfo set city = ? where city =?");
            
               st.setString(1,citytf.getText());
               st.setString(2,city);
            
               int i = st.executeUpdate();
            
                if(i==0)
                {
                    JOptionPane.showMessageDialog(this,"!! city update Failed !!");
                    con.close();
                }

                else
                {
                    JOptionPane.showMessageDialog(this,"city is updated succesfully");
                    con.close();
                }
               
           }
           
           catch(Exception e)
           {
               
           }
        }
        
        if(!dateofjoining.equalsIgnoreCase(dateofjoiningtf.getText()))
        {
           try
           {
               Class.forName("com.mysql.jdbc.Driver");
            
               Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/fms","root","");
               
               PreparedStatement st = con.prepareStatement("update masterinfo set dateofjoining = ? where dateofjoining =?");
            
               st.setString(1,dateofjoiningtf.getText());
               st.setString(2,dateofjoining);
            
               int i = st.executeUpdate();
            
                if(i==0)
                {
                    JOptionPane.showMessageDialog(this,"!! date of joining update Failed !!");
                    con.close();
                }

                else
                {
                    JOptionPane.showMessageDialog(this,"date of joining is updated succesfully");
                    con.close();
                }
               
           }
           
           catch(Exception e)
           {
               
           }
        }
        
        
       if(!salary.equalsIgnoreCase(salarytf.getText()))
        {
           try
           {
               Class.forName("com.mysql.jdbc.Driver");
            
               Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/fms","root","");
               
               PreparedStatement st = con.prepareStatement("update masterinfo set salary = ? where salary =?");
            
               st.setString(1,salarytf.getText());
               st.setString(2,salary);
            
               int i = st.executeUpdate();
            
                if(i==0)
                {
                    JOptionPane.showMessageDialog(this,"!! salary update Failed !!");
                    con.close();
                }

                else
                {
                    JOptionPane.showMessageDialog(this,"salary is updated succesfully");
                    con.close();
                }
               
           }
           
           catch(Exception e)
           {
               
           }
        }
       
       
       if(!department.equalsIgnoreCase(departmenttf.getText()))
        {
           try
           {
               Class.forName("com.mysql.jdbc.Driver");
            
               Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/fms","root","");
               
               PreparedStatement st = con.prepareStatement("update masterinfo set department = ? where department =?");
            
               st.setString(1,departmenttf.getText());
               st.setString(2,department);
            
               int i = st.executeUpdate();
            
                if(i==0)
                {
                    JOptionPane.showMessageDialog(this,"!! department update Failed !!");
                    con.close();
                }

                else
                {
                    JOptionPane.showMessageDialog(this,"department is updated succesfully");
                    con.close();
                }
               
           }
           
           catch(Exception e)
           {
               
           }
        }
       
        if(!contactnumber.equalsIgnoreCase(contactnumbertf.getText()))
        {
           try
           {
               Class.forName("com.mysql.jdbc.Driver");
            
               Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/fms","root","");
               
               PreparedStatement st = con.prepareStatement("update masterinfo set contactnumber = ? where contactnumber =?");
            
               st.setString(1,contactnumbertf.getText());
               st.setString(2,contactnumber);
            
               int i = st.executeUpdate();
            
                if(i==0)
                {
                    JOptionPane.showMessageDialog(this,"!! contact number update Failed !!");
                    con.close();
                }

                else
                {
                    JOptionPane.showMessageDialog(this,"contact number is updated succesfully");
                    con.close();
                }
               
           }
           
           catch(Exception e)
           {
               
           }
        }
        
        if(imageflag==1)
        {
           try
           {
               Class.forName("com.mysql.jdbc.Driver");
            
               Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/fms","root","");
               
               PreparedStatement st = con.prepareStatement("update masterinfo set image = ? where id = ?");
               
               FileInputStream fin=new FileInputStream(filepath); 
               
               int id=Integer.parseInt(idtf.getText());
               
               
               st.setBinaryStream(1,fin,fin.available());
               st.setInt(2,id);
            
               int i = st.executeUpdate();
            
                if(i==0)
                {
                    JOptionPane.showMessageDialog(this,"!! image update Failed !!");
                    con.close();
                }

                else
                {
                    JOptionPane.showMessageDialog(this,"image is updated succesfully");
                    con.close();
                }
               
           }
           
           catch(Exception e)
           {
               
           }
        }
       
    }//GEN-LAST:event_savebtnActionPerformed

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
        // TODO add your handling code here:
        name=null;
        state=null;
        city=null;
        department=null;
        dateofjoining=null;
        salary=null;
        contactnumber=null;
        nametf.setText("");
        statetf.setText("");
        citytf.setText("");
        dateofjoiningtf.setText("");
        salarytf.setText("");
        departmenttf.setText("");
        contactnumbertf.setText("");
        idtf.setText("");
        idprooflable.setIcon(null);
        idprooflable.setText("                          Id Proof will Appear Here");
        
    }//GEN-LAST:event_resetbtnActionPerformed

    private void idproofbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idproofbtnActionPerformed
        // TODO add your handling code here:
        JFileChooser filechooser = new JFileChooser();
        filechooser.showOpenDialog(null);
        File file =  filechooser.getSelectedFile();
        filepath = file.getAbsolutePath();
        ImageIcon icon = new ImageIcon(new ImageIcon(filepath).getImage().getScaledInstance(idprooflable.getWidth(), idprooflable.getHeight(),Image.SCALE_DEFAULT));
        idprooflable.setText("");
        idprooflable.setIcon(icon);
        imageflag=1;
        
    }//GEN-LAST:event_idproofbtnActionPerformed

    private void homebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homebtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        masterinfohome homeobj = new masterinfohome();
        homeobj.setVisible(true);
    }//GEN-LAST:event_homebtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updatemasterinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updatemasterinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updatemasterinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updatemasterinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updatemasterinfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField citytf;
    private javax.swing.JTextField contactnumbertf;
    private javax.swing.JTextField dateofjoiningtf;
    private javax.swing.JTextField departmenttf;
    private javax.swing.JButton homebtn;
    private javax.swing.JLabel id;
    private javax.swing.JButton idproofbtn;
    private javax.swing.JLabel idprooflable;
    private javax.swing.JTextField idtf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField nametf;
    private javax.swing.JButton resetbtn;
    private javax.swing.JTextField salarytf;
    private javax.swing.JButton savebtn;
    private javax.swing.JButton searchbtn;
    private javax.swing.JTextField statetf;
    // End of variables declaration//GEN-END:variables
}
